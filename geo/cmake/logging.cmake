option(GEO_ENABLE_CONSOLE_LOGGING "Enable logging to the console" ON)
option(GEO_ENABLE_FILE_LOGGING "Enable logging to the geo.log file" ON)

if (GEO_ENABLE_CONSOLE_LOGGING)
    message(STATUS "Logging to console enabled")
else()
    message(STATUS "Logging to console disabled")
endif()
if (GEO_ENABLE_FILE_LOGGING)
    message(STATUS "Logging to file enabled")
else()
    message(STATUS "Logging to file disabled")
endif()

set(LOG_LEVELS TRACE DEBUG INFO WARN ERROR CRITICAL OFF)

if (GEO_ENABLE_FILE_LOGGING OR GEO_ENABLE_CONSOLE_LOGGING)
    set(LOG_LEVEL "TRACE" CACHE STRING "The log level to use. Options are: ${LOG_LEVELS}")
    set_property(CACHE LOG_LEVEL PROPERTY STRINGS ${LOG_LEVELS})

    if (NOT LOG_LEVEL IN_LIST LOG_LEVELS)
        message(FATAL_ERROR "Invalid log level: ${LOG_LEVEL}. Options are: ${LOG_LEVELS}")
    endif()

    if(LOG_LEVEL STREQUAL "TRACE")
        target_compile_definitions(geo-core PUBLIC GEO_LOG_LEVEL_TRACE SPDLOG_ACTIVE_LEVEL=SPDLOG_LEVEL_TRACE)
    elseif(LOG_LEVEL STREQUAL "DEBUG")
        target_compile_definitions(geo-core PUBLIC GEO_LOG_LEVEL_DEBUG SPDLOG_ACTIVE_LEVEL=SPDLOG_LEVEL_DEBUG)
    elseif (LOG_LEVEL STREQUAL "INFO")
        target_compile_definitions(geo-core PUBLIC GEO_LOG_LEVEL_INFO SPDLOG_ACTIVE_LEVEL=SPDLOG_LEVEL_INFO)
    elseif (LOG_LEVEL STREQUAL "WARN")
        target_compile_definitions(geo-core PUBLIC GEO_LOG_LEVEL_WARN SPDLOG_ACTIVE_LEVEL=SPDLOG_LEVEL_WARN)
    elseif (LOG_LEVEL STREQUAL "ERROR")
        target_compile_definitions(geo-core PUBLIC GEO_LOG_LEVEL_ERROR SPDLOG_ACTIVE_LEVEL=SPDLOG_LEVEL_ERROR)
    elseif (LOG_LEVEL STREQUAL "CRITICAL")
        target_compile_definitions(geo-core PUBLIC GEO_LOG_LEVEL_CRITICAL SPDLOG_ACTIVE_LEVEL=SPDLOG_LEVEL_CRITICAL)
    elseif (LOG_LEVEL STREQUAL "OFF")
        target_compile_definitions(geo-core PUBLIC GEO_LOG_LEVEL_OFF SPDLOG_ACTIVE_LEVEL=SPDLOG_LEVEL_OFF)
    endif()
else()
    target_compile_definitions(geo-core PUBLIC GEO_LOG_LEVEL_OFF SPDLOG_ACTIVE_LEVEL=SPDLOG_LEVEL_OFF)
endif()

